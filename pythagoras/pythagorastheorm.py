# -*- coding: utf-8 -*-
"""pythagorastheorm.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RW69AswVfF7den79HLTi90-0Lk9YDcKe
"""

import streamlit as st
import matplotlib.pyplot as plt
import numpy as np
import plotly.express as px
from matplotlib.patches import Polygon, Rectangle, Arc

# Configure page
st.set_page_config(
    page_title="Petualangan Pythagoras",
    page_icon="üî∫",
    layout="wide"
)

# Colorful theme
st.markdown("""
<style>
    .main {
        background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
    }
    .header {
        font-family: 'Comic Sans MS', cursive;
        color: #3a1c71;
        text-align: center;
        text-shadow: 2px 2px 4px rgba(0,0,0,0.1);
        padding: 1rem;
        background: linear-gradient(90deg, #a1c4fd 0%, #c2e9fb 100%);
        border-radius: 15px;
        margin-bottom: 2rem;
    }
    .discovery-card {
        background-color: rgba(255, 255, 255, 0.85);
        border-radius: 20px;
        padding: 1.5rem;
        margin: 1rem 0;
        border: 3px dashed #32a1ce;
        box-shadow: 0 8px 16px rgba(0,0,0,0.1);
    }
    .triangle-grid {
        background-color: rgba(255, 236, 210, 0.7);
        border-radius: 15px;
        padding: 1rem;
        margin: 1rem;
    }
</style>
""", unsafe_allow_html=True)

# Header with fun design
st.markdown("<div class='header'><h1>üîç Petualangan Pythagoras</h1><p>Temukan Rahasia Segitiga Siku-Siku!</p></div>", unsafe_allow_html=True)

# Discovery section
with st.expander("üéØ Tantangan Penemuan!", expanded=True):
    st.markdown("""
    <div class="discovery-card">
    <h3 style="color:#5f2c82;">Dapatkah kamu menemukan pola hubungan antara ketiga sisi segitiga ini?</h3>
    <p>Perhatikan tiga contoh segitiga berikut dan cari tahu hubungan menarik di antara panjang sisinya!</p>
    </div>
    """, unsafe_allow_html=True)

    # Interactive triangle grid
    grid_cols = st.columns([1,2,1])

    with grid_cols[1]:
        # Sample triangles
        triangles = [
            {"a": 3, "b": 4, "color": "#FF9AA2"},
            {"a": 5, "b": 12, "color": "#B5EAD7"},
            {"a": 8, "b": 15, "color": "#C7CEEA"}
        ]

        tab1, tab2, tab3 = st.tabs(["Segitiga 1", "Segitiga 2", "Segitiga 3"])

        for i, tab in enumerate([tab1, tab2, tab3]):
            with tab:
                tri = triangles[i]
                c = np.sqrt(tri["a"]**2 + tri["b"]**2)

                # Draw triangle
                fig, ax = plt.subplots(figsize=(4,4))

                # Triangle
                triangle = Polygon([[0,0], [tri["a"],0], [0,tri["b"]]],
                                 color=tri["color"], alpha=0.7)
                ax.add_patch(triangle)

                # Right angle indicator
                right_angle = Rectangle((0,0), min(tri["a"],tri["b"])/4,
                                      min(tri["a"],tri["b"])/4,
                                      color='red', alpha=0.5)
                ax.add_patch(right_angle)

                # Labels
                ax.text(tri["a"]/2, -0.5, f'a={tri["a"]}', ha='center')
                ax.text(-0.5, tri["b"]/2, f'b={tri["b"]}', va='center', rotation=90)
                ax.text(tri["a"]/3, tri["b"]/3, f'c={c:.1f}',
                       rotation=np.degrees(np.arctan(tri["b"]/tri["a"])),
                       bbox=dict(facecolor='white', alpha=0.8))

                ax.set_xlim(-1, tri["a"]+1)
                ax.set_ylim(-1, tri["b"]+1)
                ax.axis('equal')
                ax.axis('off')
                st.pyplot(fig)

                # Colorful calculation display
                st.markdown(f"""
                <div style="background:linear-gradient(90deg, #a1c4fd 0%, #c2e9fb 100%);
                padding:1rem; border-radius:10px; text-align:center;">
                <b>{tri["a"]}¬≤ + {tri["b"]}¬≤ = {tri["a"]**2} + {tri["b"]**2} = {tri["a"]**2 + tri["b"]**2}</b><br>
                <span style="font-size:1.2em">‚àö{tri["a"]**2 + tri["b"]**2} ‚âà <b style="color:#d83bd8">{c:.1f}</b></span>
                </div>
                """, unsafe_allow_html=True)

# Interactive exploration
st.markdown("<div class='discovery-card'><h3 style='color:#5f2c82;'>üèóÔ∏è Bangun Segitigamu Sendiri</h3></div>", unsafe_allow_html=True)

# Creative triangle builder
cols = st.columns(2)

with cols[0]:
    st.markdown("""
    <div style="background:#f3e5f5; padding:1rem; border-radius:15px;">
    <h4 style="color:#8e24aa;">Pilih Bahan Bangun:</h4>
    """, unsafe_allow_html=True)

    # Button-based input (no sliders)
    a_options = st.radio("Panjang sisi a:",
                        [3,4,5,6,8], horizontal=True)
    b_options = st.radio("Panjang sisi b:",
                        [4,5,12,15], horizontal=True)

    st.markdown("</div>", unsafe_allow_html=True)

with cols[1]:
    # Dynamic visualization
    c = np.sqrt(a_options**2 + b_options**2)

    # Interactive Plotly visualization
    fig = px.scatter(title=f"Segitiga {a_options}-{b_options}-{c:.1f}")

    # Add triangle shape
    fig.add_trace({
        'type': 'scatter',
        'x': [0, a_options, 0, 0],
        'y': [0, 0, b_options, 0],
        'fill': 'toself',
        'fillcolor': 'rgba(100, 149, 237, 0.6)',
        'line': {'color': 'rgb(100, 149, 237)'},
        'name': 'Segitiga'
    })

    # Add right angle indicator
    fig.add_trace({
        'type': 'scatter',
        'x': [0, 0.3, 0.3, 0],
        'y': [0, 0, 0.3, 0],
        'fill': 'toself',
        'fillcolor': 'rgba(255, 0, 0, 0.5)',
        'mode': 'lines',
        'name': 'Sudut Siku-siku'
    })

    # Labels
    fig.add_annotation(x=a_options/2, y=-0.3, text=f"a={a_options}", showarrow=False)
    fig.add_annotation(x=-0.3, y=b_options/2, text=f"b={b_options}", showarrow=False)
    fig.add_annotation(x=a_options/2, y=b_options/2, text=f"c={c:.1f}", showarrow=False)

    fig.update_layout(
        width=400,
        height=400,
        showlegend=False,
        xaxis={'visible': False},
        yaxis={'visible': False},
        margin={'l':0, 'r':0, 't':40, 'b':0},
        plot_bgcolor='rgba(173, 216, 230, 0.1)'
    )

    st.plotly_chart(fig, use_container_width=True)

# Discovery question
st.markdown("""
<div class="discovery-card">
<h3 style="color:#5f2c82;">üí≠ Apa Pola yang Kamu Temukan?</h3>
<p>Cobalah beberapa kombinasi panjang sisi dan perhatikan hubungan antara ketiga sisi segitiga!</p>
<form>
<label>Tebak hubungan yang kamu temukan:</label><br>
<textarea rows="3" style="width:100%; border-radius:10px; padding:8px;"></textarea>
</form>
<p>Coba hitung: a¬≤ + b¬≤ dan bandingkan dengan c¬≤</p>
</div>
""", unsafe_allow_html=True)

# Visual proof with squares
st.markdown("<div class='discovery-card'><h3 style='color:#5f2c82;'>üß© Bukti Visual</h3></div>", unsafe_allow_html=True)

# Square visualization
fig, ax = plt.subplots(figsize=(6,6))

# Current triangle
a, b = a_options, b_options

# Squares on the legs
ax.add_patch(Rectangle((0,0), a, a, color='#FF9AA2', alpha=0.6))
ax.add_patch(Rectangle((0,0), -b, -b, color='#B5EAD7', alpha=0.6))

# Rotated square on hypotenuse
hyp_square = Polygon([
    [a,0],
    [a + b*np.cos(np.arctan2(a,b)), b*np.sin(np.arctan2(a,b))],
    [a*np.cos(np.arctan2(a,b)) - b*np.sin(np.arctan2(a,b)),
     a*np.sin(np.arctan2(a,b)) + b*np.cos(np.arctan2(a,b))],
    [a*(1 - np.sin(np.arctan2(a,b))) - b*np.cos(np.arctan2(a,b)),
     a*np.cos(np.arctan2(a,b)) + b*(1 - np.sin(np.arctan2(a,b)))]
], color='#C7CEEA', alpha=0.6)

ax.add_patch(hyp_square)

# Add original triangle
ax.add_patch(Polygon([[0,0], [a,0], [0,b]], color='skyblue', alpha=0.5))

# Labels
ax.text(a/2, -a/2, f"a¬≤ = {a**2}", ha='center')
ax.text(-b/2, -b/2, f"b¬≤ = {b**2}", ha='center')
ax.text(a/2 + b/4, b/2 - a/4, f"c¬≤ = {int(c**2)}", ha='center')

ax.set_xlim(-b-1, a+b/2+1)
ax.set_ylim(-b-1, b+1)
ax.axis('equal')
ax.axis('off')

st.pyplot(fig)

# Footer
st.markdown("---")
st.markdown("""
<div style="text-align:center; color:#5f2c82; font-family: 'Comic Sans MS', cursive;">
üî∫ Selamat Bermain dengan Matematika! üî∫
</div>
""", unsafe_allow_html=True)