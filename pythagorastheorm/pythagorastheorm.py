# -*- coding: utf-8 -*-
"""pythagorastheorm.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RW69AswVfF7den79HLTi90-0Lk9YDcKe
"""

import streamlit as st
import matplotlib.pyplot as plt
import numpy as np
import plotly.graph_objects as go
from matplotlib.patches import Polygon, Rectangle, Arc

# Set page config with fun theme
st.set_page_config(
    page_title="Penemuan Teorema Pythagoras",
    page_icon="üî∫",
    layout="wide",
    initial_sidebar_state="expanded"
)

# Custom colorful theme
st.markdown("""
<style>
    .main {
        background: linear-gradient(120deg, #f6d365 0%, #fda085 100%);
    }
    .stApp {
        background: linear-gradient(180deg, #a1c4fd 0%, #c2e9fb 100%);
    }
    .sidebar .sidebar-content {
        background: linear-gradient(180deg, #ff9a9e 0%, #fad0c4 100%);
    }
    .header-title {
        font-family: 'Comic Sans MS', cursive;
        color: #3a1c71;
        text-align: center;
        font-size: 2.5rem;
        text-shadow: 2px 2px 4px #ffffff;
    }
    .subheader {
        font-family: 'Arial Rounded MT Bold', sans-serif;
        color: #5f2c82;
        text-align: center;
    }
    .discovery-box {
        background-color: rgba(255, 255, 255, 0.8);
        border-radius: 15px;
        padding: 20px;
        margin: 10px 0;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }
    .triangle-card {
        background: rgba(255, 236, 210, 0.7);
        border-radius: 15px;
        padding: 15px;
        margin: 10px;
        border: 2px dashed #ff7e5f;
    }
</style>
""", unsafe_allow_html=True)

st.title("üîç Penemuan Teorema Pythagoras")
st.markdown('<h2 class="subheader">Mari Eksplorasi Hubungan Menarik dalam Segitiga Siku-Siku!</h2>', unsafe_allow_html=True)

# Introduction
with st.expander("üåç Apa itu Teorema Pythagoras?"):
    st.markdown("""
    <div class="discovery-box">
    <p>Teorema Pythagoras adalah salah satu konsep paling terkenal dalam matematika! Ayo kita temukan bersama:</p>
    <p style="font-size:24px; text-align:center; color:#d83bd8; font-weight:bold;">a¬≤ + b¬≤ = c¬≤</p>
    <p>Dimana:<br>
    ‚Ä¢ a dan b adalah panjang sisi siku-siku<br>
    ‚Ä¢ c adalah panjang sisi miring (hypotenusa)</p>
    </div>
    """, unsafe_allow_html=True)

# Create 3 example triangles
col1, col2, col3 = st.columns(3)

# Triangle presets
triangles = [
    {"a": 3, "b": 4, "color": "#FF9AA2"},
    {"a": 5, "b": 12, "color": "#FFB7B2"},
    {"a": 8, "b": 15, "color": "#FFDAC1"}
]

for i, col in enumerate([col1, col2, col3]):
    with col:
        tri = triangles[i]
        c = np.sqrt(tri["a"]**2 + tri["b"]**2)

        st.markdown(f"""
        <div class="triangle-card">
            <h3 style="color:#5f2c82; text-align:center;">Contoh Segitiga {i+1}</h3>
        """, unsafe_allow_html=True)

        # Visualize triangle
        fig, ax = plt.subplots(figsize=(4,4))

        # Draw triangle
        triangle = Polygon([[0,0], [tri["a"],0], [0,tri["b"]]],
                          closed=True, color=tri["color"], alpha=0.7)
        ax.add_patch(triangle)

        # Draw right angle indicator
        right_angle = Rectangle((0,0), 0.3, 0.3, color='red', alpha=0.5)
        ax.add_patch(right_angle)

        # Label sides
        ax.text(tri["a"]/2, -0.3, f'a = {tri["a"]}', ha='center')
        ax.text(-0.3, tri["b"]/2, f'b = {tri["b"]}', va='center')
        ax.text(tri["a"]/2.5, tri["b"]/2.5, f'c = {c:.1f}',
               rotation=np.degrees(np.arctan(tri["b"]/tri["a"]))-90,
               ha='center', va='center', bbox=dict(facecolor='white', alpha=0.8))

        ax.set_xlim(-1, tri["a"]+1)
        ax.set_ylim(-1, tri["b"]+1)
        ax.axis('equal')
        ax.axis('off')
        st.pyplot(fig)

        # Show calculation
        st.markdown(f"""
        <p style="text-align:center;">
        <b>Perhitungan:</b><br>
        {tri["a"]}¬≤ + {tri["b"]}¬≤ = {tri["a"]**2} + {tri["b"]**2} = {tri["a"]**2 + tri["b"]**2}<br>
        ‚àö{tri["a"]**2 + tri["b"]**2} = <span style="color:#d83bd8"><b>{c:.1f}</b></span>
        </p>
        </div>
        """, unsafe_allow_html=True)

# Interactive discovery section
st.markdown("## üéØ Ayo Buktikan Sendiri!")
st.markdown("""
<div class="discovery-box">
<p>Pilih panjang sisi yang ingin kamu eksplorasi:</p>
""", unsafe_allow_html=True)

# Create a grid of triangles to explore
cols = st.columns(4)
side_options = [3, 4, 6, 8]

example_triangles = []
for i in range(4):
    for j in range(4):
        a = side_options[i]
        b = side_options[j]
        c = np.sqrt(a**2 + b**2)
        example_triangles.append((a, b, c, f"rgb({50+i*50}, {50+j*50}, 200)"))

# Display 4x4 grid of triangles
for idx in range(0, 16, 4):
    cols = st.columns(4)
    for i in range(4):
        with cols[i]:
            a, b, c, color = example_triangles[idx+i]
            st.markdown(f"<div style='text-align:center; margin-bottom:10px;'><b>{a}-{b}-{c:.1f}</b></div>", unsafe_allow_html=True)

            # Draw triangle
            fig = go.Figure()

            # Add triangle shape
            fig.add_trace(go.Scatter(
                x=[0, a, 0, 0],
                y=[0, 0, b, 0],
                fill="toself",
                fillcolor=color,
                line_color=color,
                opacity=0.7
            ))

            # Add right angle indicator
            fig.add_trace(go.Scatter(
                x=[0, 0.3, 0.3, 0],
                y=[0, 0, 0.3, 0],
                fill="toself",
                fillcolor="red",
                opacity=0.5
            ))

            # Layout
            fig.update_layout(
                width=130,
                height=130,
                xaxis=dict(visible=False, range=[-0.5, a+0.5]),
                yaxis=dict(visible=False, range=[-0.5, b+0.5]),
                margin=dict(l=0, r=0, t=0, b=0),
                showlegend=False
            )

            st.plotly_chart(fig, use_container_width=True)

            st.markdown(f"""
            <div style="text-align:center;">
            <small>
            {a}¬≤ + {b}¬≤ = {a**2 + b**2}<br>
            c = {c:.1f}
            </small>
            </div>
            """, unsafe_allow_html=True)

st.markdown("""</div>""", unsafe_allow_html=True)

# Water square visualization
st.markdown("## üß© Bukti Visual Penjumlahan Luas")
st.markdown("""
<div class="discovery-box">
<p>Mengapa a¬≤ + b¬≤ = c¬≤? Mari lihat visualisasi berikut!</p>
</div>
""", unsafe_allow_html=True)

# Select triangle to visualize
selected_tri = st.selectbox(
    "Pilih segitiga untuk divisualisasikan:",
    ["3-4-5", "5-12-13", "6-8-10"],
    index=0
)

# Get dimensions
if selected_tri == "3-4-5":
    a, b = 3, 4
elif selected_tri == "5-12-13":
    a, b = 5, 12
else:
    a, b = 6, 8
c = np.sqrt(a**2 + b**2)

# Create visual proof
fig, ax = plt.subplots(figsize=(8, 6))

# Squares on legs
ax.add_patch(Rectangle((0, -a), a, a, facecolor='#FF9AA2', alpha=0.6))
ax.add_patch(Rectangle((-b, 0), -b, -b, facecolor='#FFB7B2', alpha=0.6))

# Square on hypotenuse (rotated)
hyp_square = np.array([
    [a, 0],
    [a + b/np.sqrt(2), -b/np.sqrt(2)],
    [a/np.sqrt(2), -(a+b)/np.sqrt(2)],
    [0, -a/np.sqrt(2)]
])
ax.add_patch(Polygon(hyp_square, facecolor='#E2F0CB', alpha=0.7))

# Triangle
ax.add_patch(Polygon([[0,0], [a,0], [0,-a]], facecolor='#B5EAD7', alpha=0.6))
ax.add_patch(Polygon([[0,0], [-b,0], [0,-b]], facecolor='#C7CEEA', alpha=0.6))
ax.add_patch(Polygon([[0,0], [a,0], [0,b]], facecolor='#B5EAD7', alpha=0.6))

# Labels
ax.text(a/2, -a*1.5, f"a¬≤ = {a**2}", fontsize=12, ha='center')
ax.text(-b*1.5, -b/2, f"b¬≤ = {b**2}", fontsize=12, va='center')
ax.text((a+b/np.sqrt(2))/2, -(a+b/np.sqrt(2))/2+0.5,
       f"c¬≤ = {int(c**2)}", fontsize=12)

ax.set_xlim(-b-2, a+5)
ax.set_ylim(-a-3, b+2)
ax.axis('equal')
ax.axis('off')

st.pyplot(fig)

# Conclusion
st.markdown("""
<div class="discovery-box">
<h3>üéâ Kesimpulan Penemuan!</h3>
<p>Setelah mengeksplorasi berbagai segitiga dan melihat visualisasinya, kamu telah menemukan:</p>
<p style="font-size:24px; text-align:center; color:#d83bd8; font-weight:bold;">
Dalam segitiga siku-siku: a¬≤ + b¬≤ = c¬≤
</p>
<p>Dimana c selalu merupakan sisi terpanjang (hypotenusa) yang berhadapan dengan sudut siku-siku!</p>
</div>
""", unsafe_allow_html=True)

# Footer
st.markdown("---")
st.markdown("""
<div style="text-align:center; color:#5f2c82;">
Aplikasi Pembelajaran Interaktif untuk SMP<br>
Dibuat dengan ‚ù§Ô∏è menggunakan Streamlit
</div>
""", unsafe_allow_html=True)